# Configuration for the Rubocop code linting tool. See README.

AllCops:
  DisabledByDefault: true
  DisplayStyleGuide: true
  SuggestExtensions: false
  Exclude:
    - db/schema.rb
    - vendor/**/*
    - node_modules/**/*
    - tmp/**/*
    - deploy/tmp/**/*
  # Will only enable new cops for the subset of cops that are enabled. https://docs.rubocop.org/rubocop/versioning.html#pending-cops
  NewCops: enable

# Enable all Security cops
Security:
  Enabled: true

# Allow:
#
#     foo
#       .bar
#
# Disallow:
#
#     foo.
#       bar
#
Layout/DotPosition:
  EnforcedStyle: leading

# Allow: def foo(...) = bar(...)
# Disallow: def foo(*args, &block) = bar(*args, &block)
Style/ArgumentsForwarding:
  Enabled: true

# Allow e.g. `map` and disallow e.g. `collect`.
Style/CollectionMethods:
  PreferredMethods:
    collect: map
    detect: find
    filter: select
    find_all: select
    inject: reduce

# The default {} is not in our styleguide, but we need a default to use this cop: https://github.com/rubocop/rubocop/issues/12029
# And we've mostly used {} consistently anyway, so we might as well enforce it.
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    'default': '{}'
    '%w': '[]'
    '%W': '[]'
    '%i': '[]'
    '%I': '[]'
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#use-square-brackets-for-w-and-friends

# Allow e.g. `numbers.map(&:to_s)` and disallow e.g. `numbers.map { _1.to_s }`.
Style/SymbolProc:
  Enabled: true

# Allow: "foo"
# Disallow: 'foo'
Style/StringLiterals:
  EnforcedStyle: double_quotes
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#double-quote-strings-unless-the-string-contains-double-quotes

#https://docs.rubocop.org/rubocop/cops_style.html#stylequotedsymbols
Style/QuotedSymbols:
  EnforcedStyle: same_as_string_literals

# Require a comma after the last item in a multi-line hash or array.
#
# The "consistent_comma" setting allows
#
#     [
#       1, 2,
#       3,
#     ]
#
# Whereas the "comma" setting seems to not want the comma after 3 if 1 and 2 were on the same line.
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: consistent_comma
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#add-commas-to-the-end-of-multiline-lists-and-hashes
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: consistent_comma
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#add-commas-to-the-end-of-multiline-lists-and-hashes

# Allow:
#
#     list.map { |x| x }
#
# Disallow:
#
#     list.map{ |x| x }
#
# Not in our styleguide, but it's what we've done for the most part.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Allow:
#
#     list.map {|x| x }
#
# Disallow:
#
#     list.map {|x| x }
#
# Not in our styleguide, but it's what we've done for the most part.
Layout/SpaceInsideBlockBraces:
  Enabled: true

# Allow:
#
#     { a: 1 }
#
# Disallow:
#
#     {a: 1}
#
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#whitespace-in-arrays-and-hashes

# Allow:
#
#     [ 1 ]
#
# Disallow:
#
#     [1]
#
Layout/SpaceInsideArrayLiteralBrackets:
  EnforcedStyle: space
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#whitespace-in-arrays-and-hashes

# Allow:
#
#     "foo" + 1 * 2 / 3**4
#
# Disallow:
#
#     "foo"+1*2/3 ** 4
#
# Not in our styleguide, but it's what we've done for the most part.
Layout/SpaceAroundOperators:
  Enabled: true

# bad: f( 3)
# good: f(3)
Layout/SpaceInsideParens:
  Enabled: true

# bad: "foo #{ var } bar"
# good: "foo #{var} bar"
Layout/SpaceInsideStringInterpolation:
  Enabled: true

# Disallow trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#avoid-trailing-whitespace

# `BigDecimal.new` is deprecated on Ruby 2.5 in favour of `BigDecimal()`.
Lint/BigDecimalNew:
  Enabled: true

Lint/DuplicateMethods:
  Enabled: true

Lint/DeprecatedClassMethods:
  Enabled: true

Layout/EmptyLineAfterGuardClause:
  Enabled: true
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#put-a-blank-line-below-guard-statements

Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: true
  AllowBeforeTrailingComments: true # Henrik likes this
  ForceEqualSignAlignment: false

# Allow:
#
#     Date.new(2019, 1, 2)
#
# Disallow:
#
#     Date.new(2019,1,2)
#
# Not in our styleguide, but it's what we've done for the most part.
Layout/SpaceAfterComma:
  Enabled: true

Style/ParallelAssignment: # https://rubystyle.guide/#parallel-assignment
  Enabled: true

Style/NumericLiterals:
  Enabled: false

Style/StabbyLambdaParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses
  StyleGuide: https://github.com/barsoom/devbook/tree/master/styleguide#lambdas-should-stab-their-arguments

# Not in our styleguide, but it's what we've done for the most part. And it ensures "rubocop --auto-correct" doesn't make the StabbyLambdaParentheses rule add in unconventional-to-us spaces.
Layout/SpaceInLambdaLiteral:
  Enabled: true
  EnforcedStyle: require_no_space

Lint/RaiseException:
  Enabled: true

# Skip redundant "begin"/"end" at the top level of method definitions or blocks.
Style/RedundantBegin:
  Enabled: true

# Allow:
#
#     foo.bar
#
# Disallow:
#
#     foo.bar()
#
Style/MethodCallWithoutArgsParentheses:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_style.html#enforcedstyleformultiline-comma
Style/TrailingCommaInArguments:
  Enabled: true
  EnforcedStyleForMultiline: comma

# https://docs.rubocop.org/rubocop/cops_style.html#stylereturnnilinpredicatemethoddefinition
Style/ReturnNilInPredicateMethodDefinition:
  Enabled: true

# Warn about "too many positional arguments in the parameter list" when more than 5.
# Warn about "too many positional arguments with optional values" when more than 3.
Metrics/ParameterLists:
  Enabled: true
  CountKeywordArgs: false
  Max: 5
  MaxOptionalParameters: 3

# https://docs.rubocop.org/rubocop/cops_lint.html#lintparenthesesasgroupedexpression
Lint/ParenthesesAsGroupedExpression:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_lint.html#lintuselessassignment
Lint/UselessAssignment:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutindentationwidth
Layout/IndentationWidth:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutindentationconsistency
Layout/IndentationConsistency:
  Enabled: true

# The next four sort-of belong together, to autocorrect conditional assigns into the form we're happy with, which is:
# myVar =
#  if condition
#    happy_path
#  else
#    other_path
#  end
#
# It only forces 'if's to the next line, everything else is a free-for-all.

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutmultilineassignmentlayout
Layout/MultilineAssignmentLayout:
  Enabled: true
  SupportedTypes:
    - if

# Indent the first line of a multiline assignment (i.e. the line directly after the =) one step
# https://docs.rubocop.org/rubocop/cops_layout.html#layoutassignmentindentation
Layout/AssignmentIndentation:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutelsealignment
# Have `else` on the same indent level as the keyword it belongs to
Layout/ElseAlignment:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutendalignment
# Have `end` on the same indent level. Doesn't touch `ends` that belong to a `begin` (There's Layout/BeginEndAlignment for that), or to a `def` (There's Layout/DefEndAlignment for that), so it just affects `end`s belonging to if/unless/while/untl etc.
Layout/EndAlignment:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_layout.html#layoutclassstructure
# https://github.com/barsoom/devbook/tree/master/styleguide#use-a-consistent-class-layout
# AutoCorrect: false because it has a tendency to make private delegates public, and it messes up whitespace
Layout/ClassStructure:
  Enabled: true
  AutoCorrect: false
  ExpectedOrder:
    - module_inclusion
    - constants
    - association
    - public_attribute_macros
    - public_delegate
    - macros
    - public_class_methods
    - initializer
    - public_methods
    - protected_attribute_macros
    - protected_methods
    - private_attribute_macros
    - private_delegate
    - private_methods

# Allow "memoize \" but not "memoize\".
Layout/LineContinuationSpacing:
  Enabled: true
  EnforcedStyle: space

# https://docs.rubocop.org/rubocop/cops_style.html#stylehashsyntax
Style/HashSyntax:
  Enabled: true
  EnforcedStyle: ruby19
  EnforcedShorthandSyntax: always # https://docs.rubocop.org/rubocop/cops_style.html#enforcedshorthandsyntax_-always-stylehashsyntax

# https://docs.rubocop.org/rubocop/cops_gemspec.html#gemspecduplicatedassignment
Gemspec/DuplicatedAssignment:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_gemspec.html#gemspecordereddependencies
Gemspec/OrderedDependencies:
  Enabled: true

# https://docs.rubocop.org/rubocop/cops_gemspec.html#gemspecrequiremfa
Gemspec/RequireMFA:
  Enabled: true
  
# https://docs.rubocop.org/rubocop/cops_naming.html#namingblockforwarding
Naming/BlockForwarding:
  Enabled: true
